// <auto-generated />
using System;
using DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240725034409_changeFieldOfRewardTableToNullable")]
    partial class changeFieldOfRewardTableToNullable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Models.CheDoPhucLoi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsApplied")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CheDoPhucLoiTable");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsApplied = true,
                            Name = "Bảo hiểm y tế"
                        },
                        new
                        {
                            Id = 2,
                            IsApplied = true,
                            Name = "Bảo hiểm xã hội"
                        },
                        new
                        {
                            Id = 3,
                            IsApplied = true,
                            Name = "Bảo hiểm thất nghiệp"
                        },
                        new
                        {
                            Id = 4,
                            IsApplied = true,
                            Name = "Bảo hiểm tai nạn lao động, bệnh nghề nghiệp"
                        },
                        new
                        {
                            Id = 5,
                            IsApplied = true,
                            Name = "Hưu trí"
                        });
                });

            modelBuilder.Entity("Models.ChiNhanhNganHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DiaChiDetail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiaChiId")
                        .HasColumnType("int");

                    b.Property<bool>("IsApplied")
                        .HasColumnType("bit");

                    b.Property<int>("NganHangId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DiaChiId");

                    b.HasIndex("NganHangId");

                    b.ToTable("ChiNhanhNganHangTable");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DiaChiDetail = "12 Le Trong Tan",
                            DiaChiId = 1,
                            IsApplied = true,
                            NganHangId = 1
                        },
                        new
                        {
                            Id = 2,
                            DiaChiDetail = "20 Duong Lang",
                            DiaChiId = 2,
                            IsApplied = true,
                            NganHangId = 2
                        },
                        new
                        {
                            Id = 3,
                            DiaChiDetail = "50 Duong Mac Thai Tong",
                            DiaChiId = 3,
                            IsApplied = true,
                            NganHangId = 3
                        });
                });

            modelBuilder.Entity("Models.ChucDanh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsApplied")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChucDanhTable");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsApplied = true,
                            Name = "Giám đốc trung tâm"
                        },
                        new
                        {
                            Id = 2,
                            IsApplied = true,
                            Name = "Phó giám đốc trung tâm"
                        },
                        new
                        {
                            Id = 3,
                            IsApplied = true,
                            Name = "Leader"
                        },
                        new
                        {
                            Id = 4,
                            IsApplied = true,
                            Name = "Nhân viên"
                        });
                });

            modelBuilder.Entity("Models.DiaChi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("QuanHuyenId")
                        .HasColumnType("int");

                    b.Property<int>("QuocGiaId")
                        .HasColumnType("int");

                    b.Property<int>("TinhThanhId")
                        .HasColumnType("int");

                    b.Property<int>("XaPhuongId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuanHuyenId");

                    b.HasIndex("QuocGiaId");

                    b.HasIndex("TinhThanhId");

                    b.HasIndex("XaPhuongId");

                    b.ToTable("DiaChiTable");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            QuanHuyenId = 1,
                            QuocGiaId = 1,
                            TinhThanhId = 1,
                            XaPhuongId = 1
                        },
                        new
                        {
                            Id = 2,
                            QuanHuyenId = 2,
                            QuocGiaId = 1,
                            TinhThanhId = 1,
                            XaPhuongId = 2
                        },
                        new
                        {
                            Id = 3,
                            QuanHuyenId = 3,
                            QuocGiaId = 1,
                            TinhThanhId = 1,
                            XaPhuongId = 3
                        },
                        new
                        {
                            Id = 4,
                            QuanHuyenId = 4,
                            QuocGiaId = 1,
                            TinhThanhId = 1,
                            XaPhuongId = 4
                        });
                });

            modelBuilder.Entity("Models.DisciplinaryAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActionTakenType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Evidence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("ViolationDate")
                        .HasColumnType("date");

                    b.Property<string>("ViolationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("DisciplinaryActionTable");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActionTakenType = "VerbalWarning",
                            Description = "Arrived 30 minutes late",
                            EmployeeId = 1,
                            Evidence = "",
                            Remarks = "",
                            ViolationDate = new DateOnly(2024, 7, 20),
                            ViolationType = "Late"
                        });
                });

            modelBuilder.Entity("Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChiNhanhNganHangId")
                        .HasColumnType("int");

                    b.Property<int>("ChucDanhId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiaChiDetail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiaChiId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApplied")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiTao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhongBanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChiNhanhNganHangId");

                    b.HasIndex("ChucDanhId");

                    b.HasIndex("DiaChiId");

                    b.HasIndex("PhongBanId");

                    b.ToTable("EmployeeTable");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChiNhanhNganHangId = 1,
                            ChucDanhId = 1,
                            DateOfBirth = new DateTime(2003, 4, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DiaChiDetail = "số 13 ngõ 5 đường ngô đình mẫn",
                            DiaChiId = 12,
                            Email = "huy023156@gmail.com",
                            Gender = true,
                            IsApplied = true,
                            Name = "Nguyen Quang Huy",
                            NgayTao = new DateTime(2024, 7, 25, 10, 44, 9, 221, DateTimeKind.Local).AddTicks(1039),
                            NguoiTao = "Admin",
                            PhoneNumber = "0369694076",
                            PhongBanId = 1
                        },
                        new
                        {
                            Id = 2,
                            ChiNhanhNganHangId = 2,
                            ChucDanhId = 2,
                            DateOfBirth = new DateTime(2002, 9, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DiaChiDetail = "số 16 đường chiến thắng",
                            DiaChiId = 13,
                            Email = "miaf@mai.com",
                            Gender = false,
                            IsApplied = true,
                            Name = "Nguyen Phuong Mai",
                            NgayTao = new DateTime(2024, 7, 25, 10, 44, 9, 221, DateTimeKind.Local).AddTicks(1055),
                            NguoiTao = "Admin",
                            PhoneNumber = "0123485682",
                            PhongBanId = 2
                        });
                });

            modelBuilder.Entity("Models.EmployeeTaiSanCapPhat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("TaiSanCapPhatId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("TaiSanCapPhatId");

                    b.ToTable("EmployeeTaiSanCapPhatTable");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 1,
                            EmployeeId = 1,
                            TaiSanCapPhatId = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 1,
                            EmployeeId = 1,
                            TaiSanCapPhatId = 2
                        },
                        new
                        {
                            Id = 3,
                            Amount = 1,
                            EmployeeId = 1,
                            TaiSanCapPhatId = 3
                        },
                        new
                        {
                            Id = 4,
                            Amount = 3,
                            EmployeeId = 1,
                            TaiSanCapPhatId = 4
                        },
                        new
                        {
                            Id = 5,
                            Amount = 1,
                            EmployeeId = 2,
                            TaiSanCapPhatId = 1
                        },
                        new
                        {
                            Id = 6,
                            Amount = 1,
                            EmployeeId = 2,
                            TaiSanCapPhatId = 2
                        },
                        new
                        {
                            Id = 7,
                            Amount = 1,
                            EmployeeId = 2,
                            TaiSanCapPhatId = 3
                        },
                        new
                        {
                            Id = 8,
                            Amount = 2,
                            EmployeeId = 2,
                            TaiSanCapPhatId = 4
                        });
                });

            modelBuilder.Entity("Models.HoSoLuong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("BacLuong")
                        .HasColumnType("real");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsApplied")
                        .HasColumnType("bit");

                    b.Property<int>("LuongCoBan")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiTao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RanhLuongMax")
                        .HasColumnType("int");

                    b.Property<int>("RanhLuongMin")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("HoSoLuongTable");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BacLuong = 4.3f,
                            EmployeeId = 1,
                            IsApplied = true,
                            LuongCoBan = 20000,
                            NgayTao = new DateTime(2024, 7, 25, 10, 44, 9, 221, DateTimeKind.Local).AddTicks(1095),
                            NguoiTao = "Admin",
                            RanhLuongMax = 150000,
                            RanhLuongMin = 70000
                        },
                        new
                        {
                            Id = 2,
                            BacLuong = 3.9f,
                            EmployeeId = 2,
                            IsApplied = true,
                            LuongCoBan = 16000,
                            NgayTao = new DateTime(2024, 7, 25, 10, 44, 9, 221, DateTimeKind.Local).AddTicks(1097),
                            NguoiTao = "Admin",
                            RanhLuongMax = 100000,
                            RanhLuongMin = 50000
                        });
                });

            modelBuilder.Entity("Models.HoSoLuongCheDoPhucLoi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("CheDoPhucLoiId")
                        .HasColumnType("int");

                    b.Property<int>("HoSoLuongId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CheDoPhucLoiId");

                    b.HasIndex("HoSoLuongId");

                    b.ToTable("HoSoLuongCheDoPhucLoiTable");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 500,
                            CheDoPhucLoiId = 1,
                            HoSoLuongId = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 300,
                            CheDoPhucLoiId = 2,
                            HoSoLuongId = 1
                        },
                        new
                        {
                            Id = 3,
                            Amount = 450,
                            CheDoPhucLoiId = 1,
                            HoSoLuongId = 1
                        },
                        new
                        {
                            Id = 4,
                            Amount = 1500,
                            CheDoPhucLoiId = 3,
                            HoSoLuongId = 1
                        });
                });

            modelBuilder.Entity("Models.HoSoLuongPhuCap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("HoSoLuongId")
                        .HasColumnType("int");

                    b.Property<int>("PhuCapId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HoSoLuongId");

                    b.HasIndex("PhuCapId");

                    b.ToTable("HoSoLuongPhuCapTable");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 100,
                            HoSoLuongId = 1,
                            PhuCapId = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 10,
                            HoSoLuongId = 1,
                            PhuCapId = 3
                        },
                        new
                        {
                            Id = 3,
                            Amount = 30,
                            HoSoLuongId = 1,
                            PhuCapId = 4
                        },
                        new
                        {
                            Id = 4,
                            Amount = 80,
                            HoSoLuongId = 2,
                            PhuCapId = 1
                        },
                        new
                        {
                            Id = 5,
                            Amount = 7,
                            HoSoLuongId = 2,
                            PhuCapId = 3
                        },
                        new
                        {
                            Id = 6,
                            Amount = 25,
                            HoSoLuongId = 2,
                            PhuCapId = 4
                        });
                });

            modelBuilder.Entity("Models.HopDong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsApplied")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HopDongTable");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsApplied = true,
                            Name = "Hợp đồng đào tạo"
                        },
                        new
                        {
                            Id = 2,
                            IsApplied = true,
                            Name = "Hợp đồng học viên"
                        },
                        new
                        {
                            Id = 3,
                            IsApplied = true,
                            Name = "Hợp đồng thử việc"
                        },
                        new
                        {
                            Id = 4,
                            IsApplied = true,
                            Name = "Hợp đồng chính thức"
                        },
                        new
                        {
                            Id = 5,
                            IsApplied = true,
                            Name = "Hợp đồng cộng tác viên"
                        });
                });

            modelBuilder.Entity("Models.HopDongDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("HoSoLuongId")
                        .HasColumnType("int");

                    b.Property<int>("HopDongId")
                        .HasColumnType("int");

                    b.Property<bool>("IsApplied")
                        .HasColumnType("bit");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiTao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuyetDinhDetailId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("HoSoLuongId");

                    b.HasIndex("HopDongId");

                    b.HasIndex("QuyetDinhDetailId");

                    b.ToTable("HopDongDetailTable");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmployeeId = 1,
                            HoSoLuongId = 1,
                            HopDongId = 6,
                            IsApplied = true,
                            NgayBatDau = new DateTime(2023, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayKetThuc = new DateTime(2025, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayTao = new DateTime(2024, 7, 25, 10, 44, 9, 221, DateTimeKind.Local).AddTicks(1227),
                            NguoiTao = "Admin",
                            QuyetDinhDetailId = 1
                        },
                        new
                        {
                            Id = 2,
                            EmployeeId = 2,
                            HoSoLuongId = 2,
                            HopDongId = 6,
                            IsApplied = true,
                            NgayBatDau = new DateTime(2023, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayKetThuc = new DateTime(2025, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayTao = new DateTime(2024, 7, 25, 10, 44, 9, 221, DateTimeKind.Local).AddTicks(1230),
                            NguoiTao = "Admin",
                            QuyetDinhDetailId = 2
                        });
                });

            modelBuilder.Entity("Models.NganHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsApplied")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NganHangTable");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsApplied = true,
                            Name = "MB Bank"
                        },
                        new
                        {
                            Id = 2,
                            IsApplied = true,
                            Name = "VP Bank"
                        },
                        new
                        {
                            Id = 3,
                            IsApplied = true,
                            Name = "Techcombank"
                        },
                        new
                        {
                            Id = 4,
                            IsApplied = true,
                            Name = "Viettinbank"
                        });
                });

            modelBuilder.Entity("Models.NoiKhamChuaBenh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DiaChiDetail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiaChiId")
                        .HasColumnType("int");

                    b.Property<bool>("IsApplied")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DiaChiId");

                    b.ToTable("NoiKhamChuaBenhTable");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DiaChiDetail = "18 Hoang Son",
                            DiaChiId = 8,
                            IsApplied = true,
                            Name = "Phong kham Tre Viet"
                        });
                });

            modelBuilder.Entity("Models.PhongBan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsApplied")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PhongBanTable");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsApplied = true,
                            Name = "C12"
                        },
                        new
                        {
                            Id = 2,
                            IsApplied = true,
                            Name = "C10"
                        },
                        new
                        {
                            Id = 3,
                            IsApplied = true,
                            Name = "C9"
                        },
                        new
                        {
                            Id = 4,
                            IsApplied = true,
                            Name = "C3"
                        },
                        new
                        {
                            Id = 5,
                            IsApplied = true,
                            Name = "C6"
                        },
                        new
                        {
                            Id = 6,
                            IsApplied = true,
                            Name = "DU"
                        });
                });

            modelBuilder.Entity("Models.PhongBanChucDanh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChucDanhId")
                        .HasColumnType("int");

                    b.Property<bool>("IsApplied")
                        .HasColumnType("bit");

                    b.Property<int>("PhongBanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChucDanhId");

                    b.HasIndex("PhongBanId");

                    b.ToTable("PhongBanChucDanhTable");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChucDanhId = 1,
                            IsApplied = true,
                            PhongBanId = 1
                        },
                        new
                        {
                            Id = 2,
                            ChucDanhId = 2,
                            IsApplied = true,
                            PhongBanId = 1
                        },
                        new
                        {
                            Id = 3,
                            ChucDanhId = 3,
                            IsApplied = true,
                            PhongBanId = 1
                        },
                        new
                        {
                            Id = 4,
                            ChucDanhId = 4,
                            IsApplied = true,
                            PhongBanId = 1
                        },
                        new
                        {
                            Id = 5,
                            ChucDanhId = 1,
                            IsApplied = true,
                            PhongBanId = 2
                        },
                        new
                        {
                            Id = 6,
                            ChucDanhId = 2,
                            IsApplied = true,
                            PhongBanId = 2
                        },
                        new
                        {
                            Id = 7,
                            ChucDanhId = 3,
                            IsApplied = true,
                            PhongBanId = 2
                        },
                        new
                        {
                            Id = 8,
                            ChucDanhId = 4,
                            IsApplied = true,
                            PhongBanId = 2
                        },
                        new
                        {
                            Id = 9,
                            ChucDanhId = 1,
                            IsApplied = true,
                            PhongBanId = 3
                        },
                        new
                        {
                            Id = 10,
                            ChucDanhId = 2,
                            IsApplied = true,
                            PhongBanId = 3
                        },
                        new
                        {
                            Id = 11,
                            ChucDanhId = 3,
                            IsApplied = true,
                            PhongBanId = 3
                        },
                        new
                        {
                            Id = 12,
                            ChucDanhId = 4,
                            IsApplied = true,
                            PhongBanId = 3
                        },
                        new
                        {
                            Id = 13,
                            ChucDanhId = 1,
                            IsApplied = true,
                            PhongBanId = 4
                        },
                        new
                        {
                            Id = 14,
                            ChucDanhId = 2,
                            IsApplied = true,
                            PhongBanId = 4
                        },
                        new
                        {
                            Id = 15,
                            ChucDanhId = 3,
                            IsApplied = true,
                            PhongBanId = 4
                        },
                        new
                        {
                            Id = 16,
                            ChucDanhId = 4,
                            IsApplied = true,
                            PhongBanId = 4
                        },
                        new
                        {
                            Id = 17,
                            ChucDanhId = 1,
                            IsApplied = true,
                            PhongBanId = 5
                        },
                        new
                        {
                            Id = 18,
                            ChucDanhId = 2,
                            IsApplied = true,
                            PhongBanId = 5
                        },
                        new
                        {
                            Id = 19,
                            ChucDanhId = 3,
                            IsApplied = true,
                            PhongBanId = 5
                        },
                        new
                        {
                            Id = 20,
                            ChucDanhId = 4,
                            IsApplied = true,
                            PhongBanId = 5
                        });
                });

            modelBuilder.Entity("Models.PhuCap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsApplied")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PhuCapTable");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsApplied = true,
                            Name = "Bảo hiểm y tế"
                        },
                        new
                        {
                            Id = 2,
                            IsApplied = true,
                            Name = "Bảo hiểm xã hội"
                        },
                        new
                        {
                            Id = 3,
                            IsApplied = true,
                            Name = "Bảo hiểm thất nghiệp"
                        },
                        new
                        {
                            Id = 4,
                            IsApplied = true,
                            Name = "Bảo hiểm tai nạn lao động, bệnh nghề nghiệp"
                        },
                        new
                        {
                            Id = 5,
                            IsApplied = true,
                            Name = "Hưu trí"
                        });
                });

            modelBuilder.Entity("Models.QuanHuyen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsApplied")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TinhThanhId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TinhThanhId");

                    b.ToTable("QuanHuyenTable");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsApplied = true,
                            Name = "Hà Đông",
                            TinhThanhId = 1
                        },
                        new
                        {
                            Id = 2,
                            IsApplied = true,
                            Name = "Đống Đa",
                            TinhThanhId = 1
                        },
                        new
                        {
                            Id = 3,
                            IsApplied = true,
                            Name = "Hoàng Mai",
                            TinhThanhId = 1
                        },
                        new
                        {
                            Id = 4,
                            IsApplied = true,
                            Name = "Cầu Giấy",
                            TinhThanhId = 1
                        },
                        new
                        {
                            Id = 5,
                            IsApplied = true,
                            Name = "Ba Đình",
                            TinhThanhId = 1
                        },
                        new
                        {
                            Id = 6,
                            IsApplied = true,
                            Name = "Quận 1",
                            TinhThanhId = 2
                        });
                });

            modelBuilder.Entity("Models.QuocGia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsApplied")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QuocGiaTable");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsApplied = true,
                            Name = "Việt Nam"
                        },
                        new
                        {
                            Id = 2,
                            IsApplied = true,
                            Name = "Nhật Bản"
                        },
                        new
                        {
                            Id = 3,
                            IsApplied = true,
                            Name = "Hoa Kỳ"
                        });
                });

            modelBuilder.Entity("Models.QuyetDinh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsApplied")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QuyetDinhTable");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsApplied = false,
                            Name = "Quyết định tuyển dụng"
                        },
                        new
                        {
                            Id = 2,
                            IsApplied = false,
                            Name = "Quyết định đuổi việc"
                        },
                        new
                        {
                            Id = 3,
                            IsApplied = false,
                            Name = "Quyết định thăng chức"
                        });
                });

            modelBuilder.Entity("Models.QuyetDinhDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsApplied")
                        .HasColumnType("bit");

                    b.Property<DateTime>("NgayHetHieuLuc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayHieuLuc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayQuyetDinh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiTao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuyetDinhId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuyetDinhId");

                    b.ToTable("QuyetDinhDetailTable");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsApplied = true,
                            NgayHetHieuLuc = new DateTime(2025, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayHieuLuc = new DateTime(2023, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayQuyetDinh = new DateTime(2023, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayTao = new DateTime(2024, 7, 25, 10, 44, 9, 221, DateTimeKind.Local).AddTicks(1191),
                            NguoiTao = "Admin",
                            NoiDung = "Tuyển dụng anh Huy vào vị trí Giám đốc",
                            QuyetDinhId = 1
                        },
                        new
                        {
                            Id = 2,
                            IsApplied = true,
                            NgayHetHieuLuc = new DateTime(2025, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayHieuLuc = new DateTime(2023, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayQuyetDinh = new DateTime(2023, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayTao = new DateTime(2024, 7, 25, 10, 44, 9, 221, DateTimeKind.Local).AddTicks(1194),
                            NguoiTao = "Admin",
                            NoiDung = "Tuyển dụng chị Mai vào vị trí Phó giám đốc",
                            QuyetDinhId = 1
                        });
                });

            modelBuilder.Entity("Models.Reward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("RewardDate")
                        .HasColumnType("date");

                    b.Property<string>("RewardType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("RewardTable");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "$1000 bonus",
                            EmployeeId = 1,
                            Reason = "Exceed sales target",
                            Remarks = "",
                            RewardDate = new DateOnly(2024, 7, 24),
                            RewardType = "Bonus"
                        });
                });

            modelBuilder.Entity("Models.TaiSanCapPhat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsApplied")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TaiSanCapPhatTable");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsApplied = true,
                            Name = "Máy tính"
                        },
                        new
                        {
                            Id = 2,
                            IsApplied = true,
                            Name = "Chuột"
                        },
                        new
                        {
                            Id = 3,
                            IsApplied = true,
                            Name = "Bàn phím"
                        },
                        new
                        {
                            Id = 4,
                            IsApplied = true,
                            Name = "Ổ cứng"
                        });
                });

            modelBuilder.Entity("Models.TinhThanh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsApplied")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuocGiaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuocGiaId");

                    b.ToTable("TinhThanhTable");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsApplied = true,
                            Name = "Hà Nội",
                            QuocGiaId = 1
                        },
                        new
                        {
                            Id = 2,
                            IsApplied = true,
                            Name = "Thành phố Hồ Chí Minh",
                            QuocGiaId = 1
                        },
                        new
                        {
                            Id = 3,
                            IsApplied = true,
                            Name = "Đà Nẵng",
                            QuocGiaId = 1
                        },
                        new
                        {
                            Id = 4,
                            IsApplied = true,
                            Name = "Tokyo",
                            QuocGiaId = 2
                        });
                });

            modelBuilder.Entity("Models.XaPhuong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsApplied")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuanHuyenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuanHuyenId");

                    b.ToTable("XaPhuongTable");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsApplied = true,
                            Name = "La Khê",
                            QuanHuyenId = 1
                        },
                        new
                        {
                            Id = 2,
                            IsApplied = true,
                            Name = "Khâm Thiên",
                            QuanHuyenId = 2
                        },
                        new
                        {
                            Id = 3,
                            IsApplied = true,
                            Name = "Phương Liệt",
                            QuanHuyenId = 3
                        },
                        new
                        {
                            Id = 4,
                            IsApplied = true,
                            Name = "Dịch Vọng",
                            QuanHuyenId = 4
                        },
                        new
                        {
                            Id = 5,
                            IsApplied = true,
                            Name = "Mỹ Khê",
                            QuanHuyenId = 5
                        },
                        new
                        {
                            Id = 6,
                            IsApplied = true,
                            Name = "Tân Định",
                            QuanHuyenId = 6
                        },
                        new
                        {
                            Id = 7,
                            IsApplied = true,
                            Name = "Yên Hòa",
                            QuanHuyenId = 4
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.ChiNhanhNganHang", b =>
                {
                    b.HasOne("Models.DiaChi", "DiaChi")
                        .WithMany()
                        .HasForeignKey("DiaChiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.NganHang", "NganHang")
                        .WithMany()
                        .HasForeignKey("NganHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiaChi");

                    b.Navigation("NganHang");
                });

            modelBuilder.Entity("Models.DiaChi", b =>
                {
                    b.HasOne("Models.QuanHuyen", "QuanHuyen")
                        .WithMany()
                        .HasForeignKey("QuanHuyenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.QuocGia", "QuocGia")
                        .WithMany()
                        .HasForeignKey("QuocGiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.TinhThanh", "TinhThanh")
                        .WithMany()
                        .HasForeignKey("TinhThanhId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.XaPhuong", "XaPhuong")
                        .WithMany()
                        .HasForeignKey("XaPhuongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuanHuyen");

                    b.Navigation("QuocGia");

                    b.Navigation("TinhThanh");

                    b.Navigation("XaPhuong");
                });

            modelBuilder.Entity("Models.DisciplinaryAction", b =>
                {
                    b.HasOne("Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Models.Employee", b =>
                {
                    b.HasOne("Models.ChiNhanhNganHang", "ChiNhanhNganHang")
                        .WithMany()
                        .HasForeignKey("ChiNhanhNganHangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.ChucDanh", "ChucDanh")
                        .WithMany()
                        .HasForeignKey("ChucDanhId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.DiaChi", "DiaChi")
                        .WithMany()
                        .HasForeignKey("DiaChiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.PhongBan", "PhongBan")
                        .WithMany()
                        .HasForeignKey("PhongBanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiNhanhNganHang");

                    b.Navigation("ChucDanh");

                    b.Navigation("DiaChi");

                    b.Navigation("PhongBan");
                });

            modelBuilder.Entity("Models.EmployeeTaiSanCapPhat", b =>
                {
                    b.HasOne("Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.TaiSanCapPhat", "TaiSanCapPhat")
                        .WithMany()
                        .HasForeignKey("TaiSanCapPhatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("TaiSanCapPhat");
                });

            modelBuilder.Entity("Models.HoSoLuong", b =>
                {
                    b.HasOne("Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Models.HoSoLuongCheDoPhucLoi", b =>
                {
                    b.HasOne("Models.CheDoPhucLoi", "CheDoPhucLoi")
                        .WithMany()
                        .HasForeignKey("CheDoPhucLoiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.HoSoLuong", "HoSoLuong")
                        .WithMany()
                        .HasForeignKey("HoSoLuongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CheDoPhucLoi");

                    b.Navigation("HoSoLuong");
                });

            modelBuilder.Entity("Models.HoSoLuongPhuCap", b =>
                {
                    b.HasOne("Models.HoSoLuong", "HoSoLuong")
                        .WithMany()
                        .HasForeignKey("HoSoLuongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.PhuCap", "PhuCap")
                        .WithMany()
                        .HasForeignKey("PhuCapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoSoLuong");

                    b.Navigation("PhuCap");
                });

            modelBuilder.Entity("Models.HopDongDetail", b =>
                {
                    b.HasOne("Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.HoSoLuong", "HoSoLuong")
                        .WithMany()
                        .HasForeignKey("HoSoLuongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.HopDong", "HopDong")
                        .WithMany()
                        .HasForeignKey("HopDongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.QuyetDinhDetail", "QuyetDinhDetail")
                        .WithMany()
                        .HasForeignKey("QuyetDinhDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("HoSoLuong");

                    b.Navigation("HopDong");

                    b.Navigation("QuyetDinhDetail");
                });

            modelBuilder.Entity("Models.NoiKhamChuaBenh", b =>
                {
                    b.HasOne("Models.DiaChi", "DiaChi")
                        .WithMany()
                        .HasForeignKey("DiaChiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiaChi");
                });

            modelBuilder.Entity("Models.PhongBanChucDanh", b =>
                {
                    b.HasOne("Models.ChucDanh", "ChucDanh")
                        .WithMany()
                        .HasForeignKey("ChucDanhId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.PhongBan", "PhongBan")
                        .WithMany()
                        .HasForeignKey("PhongBanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChucDanh");

                    b.Navigation("PhongBan");
                });

            modelBuilder.Entity("Models.QuanHuyen", b =>
                {
                    b.HasOne("Models.TinhThanh", "TinhThanh")
                        .WithMany()
                        .HasForeignKey("TinhThanhId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TinhThanh");
                });

            modelBuilder.Entity("Models.QuyetDinhDetail", b =>
                {
                    b.HasOne("Models.QuyetDinh", "QuyetDinh")
                        .WithMany()
                        .HasForeignKey("QuyetDinhId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuyetDinh");
                });

            modelBuilder.Entity("Models.Reward", b =>
                {
                    b.HasOne("Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Models.TinhThanh", b =>
                {
                    b.HasOne("Models.QuocGia", "QuocGia")
                        .WithMany()
                        .HasForeignKey("QuocGiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuocGia");
                });

            modelBuilder.Entity("Models.XaPhuong", b =>
                {
                    b.HasOne("Models.QuanHuyen", "QuanHuyen")
                        .WithMany()
                        .HasForeignKey("QuanHuyenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuanHuyen");
                });
#pragma warning restore 612, 618
        }
    }
}
